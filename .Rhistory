install.packages("swirl")
q()
x <- c(.5,.6)
x<-c(T,F)
x<- 9:29
x<-vector("numeric",length=10)
x<-vector(1.7,length=10)
x<-c(1.7,"at")
as.logical(x)
as.character(x)
install.packages("swirl")
x<-list(1,"a",TRUE,1+4i)
x
m<-matrix(nrow=2,ncol = 3)
m
dim(m)
attributes(m)
m[1][1] = 1
m
m<-matrix(1:6 ,nrow=2,ncol = 3)
m<-matrix(1:2 ,nrow=2,ncol = 3)
m
m<-matrix(1:3 ,nrow=2,ncol = 3)
m
x<-c(1,2,3)
x
y<-(5,6)
y<-c(5,6)
cbind(x,y)
y<-(5,6,7)
y<-c(5,6,7)
cbind(x,y)
z = c(9,10,11)
cbind(x,y,z)
x<-factor(c("yes","yes",no,no))
x<-factor(c("yes","yes","no","no"))
table(x)
attr(x)
attr(,"levels")
m<-matrix(2,3)
m
x<- data.frame(foo=1:4,bar=c(T,T,T))
x<- data.frame(foo=1:4,bar=c(T,T,T,F))
row.names(x)
library(swirl)
swirl()
warnings()
library(swirl)
swirl()
?<<-
source('~/datasciencecoursera/R_intro/ProgrammingAssignment2/cachematrix.R')
source('~/datasciencecoursera/R_intro/ProgrammingAssignment2/cachematrix.R')
mat <- matrix(1:6,2,3)
mat
mat <- matrix(1:4,2,2)
mat
special_mat <- makeCacheMatrix(mat)
inv <- cacheSolve(special_mat)
inv
inv <-cacheSolve(special_mat)
inv
swirl()
head(flags)
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_list <- sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
head(unique_vals)
unique_vals
lappy(unique_vals,length)
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) return(elem[2]))
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
ssapply(flags,class)
sapply(flags,class)
sapply(flags,class,character(1))
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
?mapply
?apply
library(data.table)
setwd("~/clean_data/wearable_data")
?fread
training <- fread('train/X_train.txt')
head(training)
class(training)
ncol(training)
training_col_names <- fread('features.txt')
head(training_col_names)
head(training_col_names[,V2])
head(training_col_names[,.(V2)])
training_col_names <- training_col_names[,.V2]
training_col_names <- training_col_names[,V2]
cwd()
wd()
getwd()
setwd("~/clean_data/wearable_data")
setwd("~/clean_data")
setnames(training,new=training_col_names)
setnames(training,training_col_names)
head(names(training))
test_table <- data.table(AmeancX=1:10,Bshh=rnorm(10),Ajnstds<-1:10)
test_table
test_table <- data.table(AmeancX=1:10,Bshh=rnorm(10),Ajnstds=1:10)
test_table
test_table[ , grepl( "mean" , names( df ) ) ,with=false]
test_table[ , grepl( "mean" , names( df ) ) ,with=FALSE]
names(test_table)
x <- names(test_table)
grepl('mean',x)
grepl('mean','std',x)
grepl('mean',x) | grepl('std',x)
cols <- grepl('mean',x) | grepl('std',x)
cols
test_table[,cols,with=FALSE]
training_required_cols <- grepl('mean',training_col_names) | grepl('std',training_col_names)
training <- training[,training_required_cols,with=FALSE]
activity_labels <- fread('wearble_data/activity_labels.txt')
dir
dir()
activity_labels <- fread('wearable_data/activity_labels.txt')
test_table[,new:=c('hi')]
test_table
?ifelse
?sapply
row_labels <- fread('train/y_train.txt')
row_labels <- fread('wearble_data/train/y_train.txt')
row_labels <- fread('wearable_data/train/y_train.txt')
activity_labels
activity_labels[1,V2]
activity_row <- sapply(row_labels,function(i) return(activity_labels[i,V2]))
head(activity_row)
training[,activity:=activity_row]
head(training)
subject_col <- fread('wearble_data/train/subject_train.txt')
subject_col <- fread('wearble_data/train/subject_train.txt')
getwd()
subject_col <- fread('wearable_data/train/subject_train.txt')
training[,subject:=subject_col[,V1]]
head(training)
source('~/clean_data/run_analysis.R')
source('~/clean_data/run_analysis.R')
rbind(train,test)
data <- rbind(train,test)
source('~/clean_data/run_analysis.R')
test_data
test_table
test_table[,group:=c(1,2,3)]
test_table
test_table[,,.BY=group]
test_table[,avg(Bshh),.BY=group]
test_table[,x=avg(Bshh),.BY=group]
test_table[,x=avg(Bshh),.by=group]
test_table[,x=avg(Bshh),.by=.(group)]
test_table[,.(x=avg(Bshh)),.by=.(group)]
test_table[,.(x=avg(Bshh)),.(by=group)]
test_table[,.(x=avg(Bshh)),by=group]
test_table[,.(x=mean(Bshh)),by=group]
tobe <- names(test_table)
test_table[,tobe=mea(tobe)),by=group]
test_table[,tobe=mea(tobe),by=group]
test_table[,tobe=mean(tobe),by=group]
mean()
test_table[,tobe=mean(tobe),by=group]
test_table[,(tobe):=lapply(.SD,mean),.SDcols=tobe,by=group]
test_table[,(tobe):=lapply(.SD,mean),by=group]
test_table[,(tobe[1:3]):=lapply(.SD,mean),by=group]
test_table[,(tobe[1:3]):=as.numeric(lapply(.SD,mean)),by=group]
dt2 <- test_table[, lapply(.SD,mean), by=ID]
dt2 <- test_table[, lapply(.SD,mean), by=group]
?.SD
?"data.table"
test_table[,lapply(.SD,sum),by="x,y",.SDcols=1:3]
test_table[,lapply(.SD,sum),by=group,.SDcols=1:3]
test_table[,lapply(.SD,sum),by=group,.SDcols=c('AmeancX','Bshh')]
col_names <- names(data)
length(col_names)
col_names != 'activity'
col_names <- col_names[col_names != 'activity' & col_names!='subject']
length(col_names)
lapply(col_names,function(x) return('avg'+x))
lapply(col_names,function(x) return(paste('avg',x, sep = "_")))
sapply(col_names,function(x) return(paste('avg',x, sep = "_")))
?lapply
new_col_names <- sapply(col_names,function(x) return(paste('avg',x, sep = "_")))
names(test_data)
names(test_table)
?replace
setnames(test_table,old = c('new','Bshh'),new = c('hi','die'))
names(test_table)
tidy_data <- data[,lapply(.SD,mean),by="activity,subject",.SDcols=col_names]
col_names <- names(data)
col_names <- col_names[col_names != 'activity' & col_names!='subject']
new_col_names <- sapply(col_names,function(x) return(paste('avg',x, sep = "_")))
tidy_data <- data[,lapply(.SD,mean),by="activity,subject",.SDcols=col_names]
head(tidy_data[,1:3,with=FALSE])
setnames(tidy_data,old=col_names,new=new_col_names)
head(tidy_data[,1:3,with=FALSE])
write.table(tidy_data,'tidy_avg_data')
